using static CMFLib.Helpers;

namespace CMFLib.Prometheus {
    [CMFMetadata(AutoDetectVersion = true, BuildVersions = new uint[] { }, App = CMFApplication.Prometheus)]
    public class PrometheusCMF_45104 : ICMFProvider {
        public byte[] Key(CMFHeaderCommon header, string name, byte[] digest, int length) {
            byte[] buffer = new byte[length];

            uint kidx = Keytable[length + 256];
            for (int i = 0; i != length; ++i) {
                buffer[i] = Keytable[SignedMod(kidx, 512)];
                kidx = header.BuildVersion - kidx;
            }

            return buffer;
        }

        public byte[] IV(CMFHeaderCommon header, string name, byte[] digest, int length) {
            byte[] buffer = new byte[length];

            uint kidx = Keytable[header.BuildVersion & 511];
            uint increment = header.BuildVersion * header.DataCount % 7;
            for (int i = 0; i != length; ++i) {
                buffer[i] = Keytable[SignedMod(kidx, 512)];
                kidx += increment;
                buffer[i] ^= digest[SignedMod(kidx - 73, SHA1_DIGESTSIZE)];
            }

            return buffer;
        }

        private static readonly byte[] Keytable = {
            0xF1, 0x33, 0x47, 0x8A, 0x4D, 0xE1, 0x91, 0x04, 0xA4, 0x03, 0xE9, 0xBA, 0xF9, 0x6A, 0xF7, 0xDE, 
            0xD5, 0xFF, 0xE9, 0x0A, 0x5D, 0x80, 0xA0, 0x0C, 0xEC, 0xD7, 0xBD, 0x21, 0x4A, 0x6E, 0xD7, 0xA1, 
            0x6B, 0x78, 0xC5, 0x9C, 0x21, 0x78, 0x44, 0xF2, 0xCE, 0xAA, 0x57, 0x91, 0x4A, 0x09, 0x2C, 0x7E, 
            0x0E, 0x02, 0x0C, 0x90, 0xE2, 0x9D, 0x5F, 0x77, 0xFB, 0x45, 0xF0, 0x90, 0xEC, 0x3A, 0x7B, 0xC2, 
            0x1B, 0xC7, 0x1B, 0x9E, 0x29, 0xF5, 0x8E, 0x65, 0x24, 0xF3, 0x54, 0x0D, 0x7E, 0x54, 0x58, 0xC3, 
            0xE2, 0x33, 0x0C, 0xD1, 0xC8, 0x59, 0xAC, 0x4A, 0x30, 0xC4, 0x1F, 0x5D, 0x05, 0x5B, 0xA6, 0x40, 
            0xB8, 0xF1, 0xEC, 0x39, 0x93, 0x32, 0x81, 0xD5, 0xB7, 0x9C, 0xF4, 0x60, 0xB4, 0x68, 0xE7, 0x94, 
            0xD1, 0x87, 0xD7, 0x00, 0xD7, 0x49, 0x1C, 0xA8, 0xFA, 0x63, 0x64, 0xC1, 0xEC, 0x9C, 0x14, 0x16, 
            0x96, 0x5C, 0xF0, 0x72, 0xAC, 0x0C, 0x02, 0xBB, 0x07, 0x26, 0xAA, 0x2A, 0xB9, 0x56, 0x04, 0x6E, 
            0xBB, 0x3F, 0xA7, 0xDA, 0xC0, 0x0C, 0xDA, 0xD9, 0xFC, 0x20, 0xEC, 0x49, 0x28, 0x0B, 0x64, 0x49, 
            0x53, 0x0A, 0x21, 0x76, 0xA2, 0x11, 0x8D, 0xA2, 0x51, 0xCE, 0xF0, 0x77, 0xB9, 0x31, 0x99, 0x2B, 
            0xB1, 0x3E, 0x1E, 0x49, 0x64, 0x30, 0x45, 0x39, 0x4E, 0xE4, 0xFA, 0x2B, 0x07, 0x3B, 0x91, 0xB4, 
            0x81, 0x95, 0xC0, 0xB0, 0x3F, 0x15, 0x5D, 0xFE, 0x24, 0x04, 0x08, 0x1B, 0x65, 0x14, 0x45, 0x65, 
            0x7B, 0x18, 0xAD, 0x0B, 0xE4, 0xB4, 0x20, 0x71, 0x71, 0x03, 0x89, 0x38, 0xC5, 0x10, 0xEE, 0xFF, 
            0x99, 0x1E, 0x05, 0x5A, 0x62, 0x45, 0x8F, 0x8E, 0x9A, 0x6A, 0x19, 0x55, 0xC2, 0x39, 0x89, 0x35, 
            0x34, 0x34, 0x2F, 0xE5, 0x85, 0xD1, 0xBE, 0x55, 0xD2, 0xA8, 0xBE, 0x1C, 0x62, 0xD1, 0x8D, 0xEF, 
            0xD3, 0x0C, 0x00, 0xB6, 0xCC, 0xA9, 0x36, 0xD3, 0x89, 0x14, 0x0E, 0xC0, 0xA7, 0x98, 0xD0, 0x4B, 
            0x0F, 0xF6, 0xAE, 0x31, 0x4C, 0x67, 0x22, 0x57, 0x62, 0x40, 0x77, 0xDA, 0x75, 0x36, 0x62, 0x72, 
            0x1F, 0x91, 0x0F, 0x07, 0x3A, 0x24, 0x95, 0x9B, 0xD6, 0xC1, 0x52, 0x83, 0xC6, 0xC3, 0x95, 0x40, 
            0xD0, 0xE4, 0xDE, 0x7C, 0xA5, 0x06, 0xE3, 0xD4, 0x10, 0x10, 0xAB, 0x85, 0x4C, 0x7C, 0xB3, 0xD6, 
            0xB2, 0xFB, 0x18, 0x4E, 0xE5, 0x0F, 0x79, 0x13, 0x6E, 0x40, 0x3E, 0x59, 0x20, 0xB7, 0xD2, 0x9D, 
            0x1B, 0xAA, 0xD1, 0xB1, 0x7D, 0x61, 0xE2, 0xBB, 0x75, 0x6C, 0xED, 0x25, 0xEB, 0x22, 0x28, 0x27, 
            0x9C, 0xE3, 0x30, 0x12, 0xE9, 0xDE, 0x5B, 0xB0, 0xDC, 0x22, 0x1C, 0xCB, 0xA6, 0x2B, 0xA2, 0xD2, 
            0x18, 0x26, 0x32, 0x9F, 0xFE, 0x61, 0x56, 0x69, 0x1F, 0xBA, 0x31, 0x4C, 0xFE, 0xC6, 0xAE, 0x6E, 
            0xCC, 0xBF, 0x39, 0x15, 0xF2, 0x1F, 0xD9, 0x8C, 0xFB, 0x14, 0x12, 0x21, 0xF5, 0x5D, 0x47, 0x57, 
            0xBE, 0xC4, 0x4A, 0xDD, 0x6D, 0x1F, 0xE5, 0x9D, 0xC2, 0xFB, 0xDB, 0x46, 0x68, 0x00, 0x13, 0xEB, 
            0x40, 0x5D, 0x9E, 0xE0, 0x6F, 0xEA, 0xD4, 0x72, 0x42, 0x70, 0xCB, 0x5C, 0xF7, 0xE3, 0x80, 0x70, 
            0x7C, 0x2F, 0xB5, 0x34, 0x00, 0xB7, 0x13, 0x28, 0xFA, 0xB0, 0xD0, 0xCB, 0xB1, 0x35, 0x95, 0x64, 
            0xF1, 0x3B, 0x99, 0x6C, 0x89, 0x70, 0x60, 0x04, 0x7D, 0x1C, 0xA7, 0xAE, 0x15, 0x96, 0x6D, 0xBB, 
            0xDC, 0x21, 0xD2, 0x99, 0x77, 0xF5, 0x64, 0x40, 0xD7, 0x1A, 0x5F, 0xC7, 0x89, 0xA3, 0x9A, 0xD0, 
            0x2E, 0xFA, 0xCB, 0x5B, 0x14, 0xEB, 0xBC, 0x5F, 0xA1, 0x2C, 0x9E, 0xC7, 0xCF, 0x30, 0x2D, 0xE7, 
            0xA1, 0x4D, 0xC3, 0xB8, 0xE6, 0xE2, 0x8A, 0x18, 0xE4, 0x8D, 0xDB, 0xE8, 0x46, 0xD4, 0x23, 0xE3
        };
    }
}